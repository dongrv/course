//go:build reels
// +build reels

package casino

import "fmt"

// CustomConfig 棋盘和奖励配置
type CustomConfig struct {
	UpgradePoint int   `json:"UpgradePoint"`
	Awards       []int `json:"Awards"`
}

type AutoGenerated struct {
}

func (c *CustomConfig) Copy() CustomConfig {
	return CustomConfig{}
}

// Game 自定义游戏进度
type Game struct {
	Points int32 // 当前拥有的总积分
	Honor  int   // 达成的荣誉/级别
}

func NewGame() *Game {
	return &Game{}
}

type Result struct {
	Honor int
}

func (r Result) Default(error) Outer { return nil }
func (r Result) Value() interface{}  { return r.Honor }
func (r Result) Err() error          { return nil }

// Upgrade 触发升级后加积分，返回当前积分
func (game *Game) Upgrade() int {
	game.Points += int32(config.Custom.UpgradePoint)
	for order, points := range config.Custom.Awards {
		if game.Points >= int32(points) {
			game.Honor = order
			return order
		}
	}
	return game.Honor
}

func (game *Game) Do(_ Inputer) Outer {
	result := Result{}
	result.Honor = game.Upgrade()
	return result
}

func (game *Game) Print() string {
	return fmt.Sprintf("当前积分：%d\n当前段位：%d\n", game.Points, game.Honor)
}
